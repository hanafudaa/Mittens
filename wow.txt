
    if (interaction.commandName === 'automod-spam-remove') {
        if (interaction.channel.type === ChannelType.DM) return interaction.reply({ content: 'This command won\'t work here.', ephemeral: true }).catch((err) => console.error(err));
        await interaction.guild.autoModerationRules.fetch()
        await interaction.deferReply();

        const spamRule = interaction.guild.autoModerationRules.cache.find(AutoModerationRule => AutoModerationRule.creatorId === `${config.clientId}`);

        if (!spamRule) return interaction.editReply({ content: `Couldn't find an Automoderation rule made by kuromi` }).catch((err) => console.log(err));

        interaction.guild.autoModerationRules.delete(spamRule).then(interaction.editReply({ content: `Automod rule spam messages made by kuromi has been removed` })).catch((err) => console.log(err));
    }

    if (interaction.commandName === 'automod-spam') {
        if (interaction.channel.type === ChannelType.DM) return interaction.reply({ content: 'This command won\'t work here.', ephemeral: true }).catch((err) => console.error(err));
        await interaction.deferReply();

        const rule1 = await interaction.guild.autoModerationRules.create({
            name: 'Prevent spam messages by kuromi',
            creatorId: `${config.clientId}`,
            enabled: true,
            eventType: 1,
            triggerType: 3,
            triggerMetadata: {
                mentionTotalLimit: 3
            },
            actions: [
                {
                    type: 1,
                    metadata: {
                        channel: interaction.channel,
                        durationSeconds: 10,
                        customMessage: `Message was blocked by kuromi through auto moderation`
                    }
                }
            ]
        }).catch(async err => {
            setTimeout(async () => {
                console.log(err);
                await interaction.editReply({ content: `${err}` });
            }, 2000);
        })

        setTimeout(async () => {
            if (!rule1) return;

            await interaction.editReply({ content: `Automod rule has been created. All spam messages will now be deleted` });
        }, 3000);
    }


const DiscordRPC = require('discord-rpc');
const RPC = new DiscordRPC.Client({ transport: 'ipc' });

DiscordRPC.register('1142613870985363517');

async function setActivity() {
    if (!RPC) return;
    RPC.setActivity({
        details: 'Kanye West',
        largeImageKey: `i_wonder_album_cover`
    })
}
RPC.on('ready', async () => {
    setActivity();

    setInterval(() => {
        setActivity();
    }, 15 * 1000);
});
RPC.login({ clientId: `1142613870985363517` });
