
        case 'stop':
            message.reply({ content: 'Stopping song' });
            var getConnection = getVoiceConnection(message.guild.id);
            player.stop();
            getConnection.destroy();
            break;

        case 'ink':
            try {
                let userProfile = await UserProfile.findOne({ userid: message.author.id });

                if (!userProfile) {
                    userProfile = new UserProfile({ userid: message.author.id });
                }

                var k_coinAmount = userProfile.k_coins;

                if (k_coinAmount <= 0) return message.reply(`You need **1** k-coin to play this song`);

                userProfile.k_coins -= 1
                await userProfile.save()

                message.reply({ content: `Playing **"I Don't Want To Set The World On Fire" - THe Ink Spots**, **-1** k-coin` });

                const inkspots = createAudioResource('./inkspots.mp3');

                const connection = joinVoiceChannel({
                    channelId: message.member.voice.channel.id,
                    guildId: message.guild.id,
                    adapterCreator: message.guild.voiceAdapterCreator,
                });

                var getConnection = getVoiceConnection(message.guild.id);

                player.play(inkspots);

                const subscription = getConnection.subscribe(player);

                getConnection.on(VoiceConnectionStatus.Ready, () => {
                    console.log('The connection has entered the Ready state - ready to play audio!');
                });

                player.on(AudioPlayerStatus.Playing, (oldState, newState) => {
                    console.log('Audio player is in the Playing state!');
                });

                player.on(AudioPlayerStatus.Idle, (oldState, newState) => {
                    console.log('Audio player is in the idle state!');
                    player.stop();
                    if (connection !== null) return getConnection.destroy();
                });

            } catch (error) {
                console.log(`error handling $ink: ${error}`);
            }
            break;
